name: PHPCS check
on:
  push:
  pull_request:
  # Allow manually triggering the workflow.
  workflow_dispatch:
  # Allow other workflows to call this one
  workflow_call:
    outputs:
      phpcs_status:
        description: "The status of the PHPCS check"
        value: ${{ jobs.phpcs.result }}

# Cancel all previous workflow runs for the same branch that have not yet completed.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  phpcs:
    name: PHPCS check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: 'latest'
          ini-values: 'memory_limit=1G'
          coverage: none
          tools: cs2pr

      - name: Install Composer dependencies
        uses: "ramsey/composer-install@v3"
        with:
          # Bust the cache at least once a month - output format: YYYY-MM.
          custom-cache-suffix: $(date -u "+%Y-%m")

      - name: Verify PHPCS installation
        run: |
          vendor/bin/phpcs --version
          vendor/bin/phpcs -i

      - name: Run PHPCS checks
        id: phpcs
        run: |
          # Run PHPCS with verbose output
          vendor/bin/phpcs --standard=phpcs.xml --extensions=php --report=checkstyle --report-file=./phpcs-report.xml -v || true
          
          # Check if report file exists and show its contents
          if [ -f ./phpcs-report.xml ]; then
            echo "PHPCS report file exists. Contents:"
            cat ./phpcs-report.xml
            echo "File size: $(stat -f%z ./phpcs-report.xml) bytes"
          else
            echo "PHPCS report file was not created"
            exit 1
          fi

      - name: Verify cs2pr installation
        run: |
          which cs2pr
          cs2pr --version || true

      - name: Show PHPCS results in PR
        if: ${{ always() && steps.phpcs.outcome == 'failure' }}
        run: |
          if [ -f ./phpcs-report.xml ]; then
            echo "Attempting to run cs2pr..."
            cs2pr ./phpcs-report.xml || {
              echo "cs2pr failed. Report file contents:"
              cat ./phpcs-report.xml
              echo "File size: $(stat -f%z ./phpcs-report.xml) bytes"
              exit 1
            }
          else
            echo "No PHPCS report file found. This might indicate a configuration issue."
            exit 1
          fi